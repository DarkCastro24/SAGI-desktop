<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>