<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        spAAAAAASUVORK5CYII=
</value>
  </data>
</root>