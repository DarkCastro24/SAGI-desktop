<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAASSSURBVHhe7dw/iBxlHMbxidFEUBNQtDAI/jl3Z13BFGJtpQhpTGFjaytY2WopSKKHlRaeGsEQ
        0WskQoIGIoadTCwkXmMhomCTKJKkStTXd6ILv3nn+747F733YOcpPsU+zcx99+5274Xb4umXDsg2wlHy
        wVHywVHywVHywVHywVHywVHywVHywVHywVHywVHywVHywVHywVHywVHywTHFvVdMvTe877wrnvtfrRWv
        0nWXFY7EHSt2+UBveX+0gm2FAT0JOIb+jX+yE2orDeRJwDHkgzTf+RxqKw3gScDR8iGa3/lb/2snZsmf
        BBwtH+BNDJPTWvEa3dsywNHyATY6QbbDkv4k4Gj5L/5yJ8Z2WcKfBBwtDDFszd8+zd9Ah927xSPUbDNw
        tMyFpat5c7Lq3i5uoXZ94GgFFxR24kafBBwtuJgQ/26R+i2Co4UXE3LNfVBMqGEKjhZcSGLWikPUMAVH
        Cy8kMeepYQqOFlxE4i5RwxQcLbiIJFDDFBwtuojEUcMUHC26iMRRwxQcLbqIxFHDFBwtusgN+/QO577Y
        59zXK86dHXvlMrrqqvJHV4/X/df4nDtW7KSuczhaGHKzPtrt3On76WaXX12ec/XkUWrbwNHCoJtx9Fbn
        Zg/zzQ1FXf7mqvHj1LczhDBqX0d2+l83D/FNDc74J3fuwb1h39YDgmH7On433MigvR72bT0gGLavM82L
        Ld7IUF1wG9Ndtm8rNsGwfTQvvHwTAzfdb/u2YhOM28f6Hri4uGryrO3bik0wbh+f38M3MHSz8inbtxWb
        YNw+Tt3HNzB0wd8ErdgE4/ahF2ByNc+L8Ic308WlLr8N+7YeEAy8yMe38Q0M3uRI2Lf1gGDgRT67Ey4u
        /h3Qy2Hf1gOCgRc5eS/fwNDVo2fCvq0HBAMvcvoBvoGhOzPaF/ZtPSAYOOX9Hf5HbWnP+v+LX6lvZwhh
        5JSjOoKIOEV9O0MII6es76WLy9lylfp2hhBGTtERBKsmL1DfzhDCyClf6ggC1aMnqG9nCGHkFB1BkD/d
        xvR26tsZQhg5RkcQMd9T2waOFoaO0RFEzCfUtoGjhaFjdATBqjL6H544Whg6RkcQMQepbQNHC0PH6AiC
        fTNdobYNHC0MTXQEEXPFueImatvA0cLYREcQrCpn1HUORwtjEx1BxLxDXedwtDA20REEq8oXqescjhbG
        JjqCYHX5JHWdw9HC2ERHEKwq76KuczhaGDukI4iYn6mphaOFwUM6goiYHKemFo4WBg/pCILV44Wfb4Sj
        5QNf6gQP6QgiYvw8NbVwtHzg5sOJOPzcVzqCQLPpwg90wtHygQ93gls6goj5xbliBzW1cLSaj+XyoeMf
        W6kjCFaXr1DPEI4hH3q1E35ORxDkBzdb2UMtQziGmo/j8rFPdOI3dAQRuuiq0WPUkeBIrj8J/3yI67XW
        E6B/xLBq/9ZzTP1icEy5/pqwVhzy8c97l4d9BDH+y81Gv/s3Iev+8cHUuX8MjpIPjpIPjpIPjpIPjpIP
        jpIPjpIPjpIPjpIPjpIPjpIPjpIPjpIPjpIPjpIPjpLLgeJvaLDlcN4Y+y0AAAAASUVORK5CYII=
</value>
  </data>
</root>